  influxdb:
    image: influxdb:2.2
    container_name: InfluxDB
    ports:
      - '8086:8086'
    volumes:
      - '/mnt/volume0/home_server_folders/influxdb:/var/lib/influxdb2'
      - '/mnt/volume0/home_server_folders/influxdb_etc:/etc/influxdb2'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 5s
      timeout: 10s
      retries: 20
    networks:
      - defaultnetwork
  
  web:
    image: 'ghcr.io/analogj/scrutiny:master-web'
    container_name: ScrutinyWeb
    ports:
      - '8080:8080'
    volumes:
      - '/mnt/volume0/home_server_folders/scrutiny_web/config:/opt/scrutiny/config'
    environment:
      SCRUTINY_WEB_INFLUXDB_HOST: 'influxdb'
    depends_on:
      influxdb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 5s
      timeout: 10s
      retries: 20
      start_period: 10s
    networks:
      - defaultnetwork
  
  collector:
    image: 'ghcr.io/analogj/scrutiny:master-collector'
    container_name: ScrutinyCollector
    cap_add:
      - SYS_RAWIO
      - SYS_ADMIN
    volumes:
      - '/run/udev:/run/udev:ro'
    environment:
      COLLECTOR_API_ENDPOINT: 'http://web:8080'
      COLLECTOR_HOST_ID: 'Thirteen'
      # If true forces the collector to run on startup (cron will be started after the collector completes)
      # see: https://github.com/AnalogJ/scrutiny/blob/master/docs/TROUBLESHOOTING_DEVICE_COLLECTOR.md#collector-trigger-on-startup
      COLLECTOR_RUN_STARTUP: false
    depends_on:
      web:
        condition: service_healthy
    devices:
      - "/dev/nvme0"
      - "/dev/sda"
    networks:
      - defaultnetwork